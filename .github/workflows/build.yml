# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name:  build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Set Output
      run: |
        echo "OUTPUT=$GITHUB_WORKSPACE/output" >> $GITHUB_ENV
        echo "Output is: $OUTPUT"
        echo "TESTRESULTS=$GITHUB_WORKSPACE/tests" >> $GITHUB_ENV
        echo "Test output is: $TESTRESULTS"
    
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        
    - name: Setup .NET 3
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 3.x
        
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: '5.5.0'
        includePrerelease: true
    - name: Define version
      uses: gittools/actions/gitversion/execute@v0.9.7
      with:
        useConfigFile: true
        configFilePath: ./build/GitVersion.yml
        targetPath: ./src
        additionalArguments: /updateprojectfiles
    - name: Display Version
      run: |
        echo "Version: $GITVERSION_SEMVER"
        
    - name: Restore dependencies
      working-directory: ./src
      run: dotnet restore
    - name: Build
      working-directory: ./src
      run: dotnet build  --no-restore --configuration Release
      
    - name: Test
      working-directory: ./src
      run: dotnet test --no-build --verbosity normal --configuration Release --logger 'trx;LogFileName=${{env.TESTRESULTS}}/test-result.trx'
      
    - name: Test Summary
      uses: zyborg/dotnet-tests-report@v1
      with:
        project_path: src/CloudApp.Tests
        name: dotnet tests
        report_name: cloud app tests
        report_title: CloudApp Tests
        github_token: ${{ secrets.GITHUB_TOKEN }}
      if: always()
            
    - name: Package      
      working-directory: ./src
      run: dotnet publish --configuration Release -o $OUTPUT
      
    - name: Upload CloudApp package
      uses: actions/upload-artifact@v3.1.1
      with:
        name: 'CloudApp-${{env.GITVERSION_SEMVER}}'
        path: ${{env.OUTPUT}}
        
    
